diff -rupN megaglest-3.5.2//source/glest_game/main/main.cpp megaglest-3.5.2.new//source/glest_game/main/main.cpp
--- megaglest-3.5.2//source/glest_game/main/main.cpp	2011-05-25 18:34:25.000000000 -0500
+++ megaglest-3.5.2.new//source/glest_game/main/main.cpp	2011-09-12 19:48:01.446573753 -0500
@@ -2248,6 +2248,17 @@ void CheckForDuplicateData() {
 }
 
 int glestMain(int argc, char** argv) {
+    if (!getenv("HOME"))
+    throw runtime_error("HOME external variable is not set");
+  
+    char path[PATH_MAX];
+    snprintf(path, PATH_MAX, "%s/.megaglest", getenv("HOME"));
+    mkdir(path, 0750);
+ 
+    snprintf(path, PATH_MAX, "%s/.megaglest/screens", getenv("HOME"));
+    mkdir(path, 0750);
+    
+    chdir("@GENTOO_DATADIR@");
 #ifdef SL_LEAK_DUMP
 	AllocRegistry memoryLeaks = AllocRegistry::getInstance();
 #endif
diff -rupN megaglest-3.5.2//source/shared_lib/sources/util/leak_dumper.cpp megaglest-3.5.2.new//source/shared_lib/sources/util/leak_dumper.cpp
--- megaglest-3.5.2//source/shared_lib/sources/util/leak_dumper.cpp	2011-05-18 16:49:11.000000000 -0500
+++ megaglest-3.5.2.new//source/shared_lib/sources/util/leak_dumper.cpp	2011-09-12 19:49:56.074993454 -0500
@@ -42,8 +42,9 @@ AllocRegistry &AllocRegistry::getInstanc
 }
 
 AllocRegistry::~AllocRegistry(){
-
-	dump("leak_dump.log");
+       char path[PATH_MAX];
+       snprintf(path, PATH_MAX, "%s/.megaglest/leak_dump.log", getenv("HOME"));
+       dump(path);
 }
 
 void AllocRegistry::allocate(AllocInfo info){
diff -rupN megaglest-3.5.2//source/shared_lib/sources/util/profiler.cpp megaglest-3.5.2.new//source/shared_lib/sources/util/profiler.cpp
--- megaglest-3.5.2//source/shared_lib/sources/util/profiler.cpp	2011-05-18 16:49:11.000000000 -0500
+++ megaglest-3.5.2.new//source/shared_lib/sources/util/profiler.cpp	2011-09-12 20:00:35.448023328 -0500
@@ -86,11 +86,12 @@ Profiler::~Profiler(){
 #ifdef WIN32
 	FILE* f= = _wfopen(utf8_decode(profileLog).c_str(), L"w");
 #else
-	FILE *f= fopen(profileLog.c_str(), "w");
+       char path[PATH_MAX];
+       snprintf(path, PATH_MAX, "%s/.magaglest/profiler.log", getenv("HOME"));
+       FILE *f= fopen(path, "w");
 #endif
 	if(f==NULL)
-		throw runtime_error("Can not open file: " + profileLog);
-
+               throw runtime_error("Can not open file: %s",path);
 	fprintf(f, "Profiler Results\n\n");
 
 	rootSection->print(f);
diff -rupN megaglest-3.5.2//source/shared_lib/sources/util/properties.cpp megaglest-3.5.2.new//source/shared_lib/sources/util/properties.cpp
--- megaglest-3.5.2//source/shared_lib/sources/util/properties.cpp	2011-05-25 17:41:19.000000000 -0500
+++ megaglest-3.5.2.new//source/shared_lib/sources/util/properties.cpp	2011-09-12 20:05:26.701926323 -0500
@@ -14,7 +14,8 @@
 #include <fstream>
 #include <stdexcept>
 #include <cstring>
-
+#include <limits.h>
+#include <stdlib.h>
 #include "conversion.h"
 #include "util.h"
 #include "platform_common.h"
@@ -277,7 +278,9 @@ void Properties::save(const string &path
 	ofstream fileStream(fp);
 #else
 	ofstream fileStream;
-	fileStream.open(path.c_str(), ios_base::out | ios_base::trunc);
+       char str[PATH_MAX];
+       snprintf(str, PATH_MAX, "%s/.megaglest/%s", getenv("HOME"), path.c_str());
+       fileStream.open(str, ios_base::out | ios_base::trunc);
 #endif
 	fileStream << "; === propertyMap File === \n";
 	fileStream << '\n';
