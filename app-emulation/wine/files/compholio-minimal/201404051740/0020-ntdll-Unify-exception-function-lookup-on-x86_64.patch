From 565726f893787072a12329af854e072c5d325906 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Fri, 4 Apr 2014 10:11:56 +0200
Subject: ntdll: Unify exception function lookup on x86_64.

---
 dlls/ntdll/signal_x86_64.c |  102 +++++++++++++++++++++-----------------------
 1 file changed, 48 insertions(+), 54 deletions(-)

diff --git a/dlls/ntdll/signal_x86_64.c b/dlls/ntdll/signal_x86_64.c
index b28cb99..57afe16 100644
--- a/dlls/ntdll/signal_x86_64.c
+++ b/dlls/ntdll/signal_x86_64.c
@@ -1921,6 +1921,28 @@ static RUNTIME_FUNCTION *find_function_info( ULONG64 pc, HMODULE module,
     return NULL;
 }
 
+/**********************************************************************
+ *           lookup_function_info
+ */
+static RUNTIME_FUNCTION *lookup_function_info( ULONG64 pc, ULONG64 *base, LDR_MODULE **module )
+{
+    RUNTIME_FUNCTION *func = NULL;
+    ULONG size;
+
+    /* PE module or wine module */
+    if (!LdrFindEntryForAddress( (void *)pc, module ))
+    {
+        *base = (ULONG64)(*module)->BaseAddress;
+        if ((func = RtlImageDirectoryEntryToData( (*module)->BaseAddress, TRUE,
+                                                  IMAGE_DIRECTORY_ENTRY_EXCEPTION, &size )))
+        {
+            /* lookup in function table */
+            func = find_function_info( pc, (*module)->BaseAddress, func, size );
+        }
+    }
+
+    return func;
+}
 
 /**********************************************************************
  *           call_handler
@@ -2002,7 +2024,6 @@ static NTSTATUS call_stack_handlers( EXCEPTION_RECORD *rec, CONTEXT *orig_contex
     DISPATCHER_CONTEXT dispatch;
     CONTEXT context, new_context;
     LDR_MODULE *module;
-    DWORD size;
     NTSTATUS status;
 
     context = *orig_context;
@@ -2021,31 +2042,18 @@ static NTSTATUS call_stack_handlers( EXCEPTION_RECORD *rec, CONTEXT *orig_contex
 
         /* first look for PE exception information */
 
-        if (!LdrFindEntryForAddress( (void *)context.Rip, &module ))
+        if ((dispatch.FunctionEntry = lookup_function_info( context.Rip, &dispatch.ImageBase, &module )))
         {
-            RUNTIME_FUNCTION *dir;
-
-            dispatch.ImageBase = (ULONG64)module->BaseAddress;
-            if ((dir = RtlImageDirectoryEntryToData( module->BaseAddress, TRUE,
-                                                     IMAGE_DIRECTORY_ENTRY_EXCEPTION, &size )))
-            {
-                if ((dispatch.FunctionEntry = find_function_info( context.Rip, module->BaseAddress,
-                                                                  dir, size )))
-                {
-                    dispatch.LanguageHandler = RtlVirtualUnwind( UNW_FLAG_EHANDLER, dispatch.ImageBase,
-                                                                 context.Rip, dispatch.FunctionEntry,
-                                                                 &new_context, &dispatch.HandlerData,
-                                                                 &dispatch.EstablisherFrame, NULL );
-                    goto unwind_done;
-                }
-            }
-            else if (!(module->Flags & LDR_WINE_INTERNAL))
-                WARN( "exception data not found in %s\n", debugstr_w(module->BaseDllName.Buffer) );
+            dispatch.LanguageHandler = RtlVirtualUnwind( UNW_FLAG_EHANDLER, dispatch.ImageBase,
+                                                         context.Rip, dispatch.FunctionEntry,
+                                                         &new_context, &dispatch.HandlerData,
+                                                         &dispatch.EstablisherFrame, NULL );
+            goto unwind_done;
         }
 
         /* then look for host system exception information */
 
-        if (!module || (module->Flags & LDR_WINE_INTERNAL))
+        else if (!module || (module->Flags & LDR_WINE_INTERNAL))
         {
             struct dwarf_eh_bases bases;
             const struct dwarf_fde *fde = _Unwind_Find_FDE( (void *)(context.Rip - 1), &bases );
@@ -2065,6 +2073,8 @@ static NTSTATUS call_stack_handlers( EXCEPTION_RECORD *rec, CONTEXT *orig_contex
             }
         }
 
+        else WARN( "exception data not found in %s\n", debugstr_w(module->BaseDllName.Buffer) );
+
         /* no exception information, treat as a leaf function */
 
         new_context.Rip = *(ULONG64 *)context.Rsp;
@@ -2540,23 +2550,18 @@ PRUNTIME_FUNCTION WINAPI RtlLookupFunctionEntry( ULONG64 pc, ULONG64 *base, UNWI
 {
     LDR_MODULE *module;
     RUNTIME_FUNCTION *func;
-    ULONG size;
 
     /* FIXME: should use the history table to make things faster */
 
-    if (LdrFindEntryForAddress( (void *)pc, &module ))
+    func = lookup_function_info( pc, base, &module );
+    if (!func)
     {
-        WARN( "module not found for %lx\n", pc );
-        return NULL;
-    }
-    if (!(func = RtlImageDirectoryEntryToData( module->BaseAddress, TRUE,
-                                               IMAGE_DIRECTORY_ENTRY_EXCEPTION, &size )))
-    {
-        WARN( "no exception table found in module %p pc %lx\n", module->BaseAddress, pc );
-        return NULL;
+        if (module)
+            WARN( "no exception table found in module %p pc %lx\n", module->BaseAddress, pc );
+        else
+            WARN( "module not found for %lx\n", pc );
     }
-    func = find_function_info( pc, module->BaseAddress, func, size );
-    if (func) *base = (ULONG64)module->BaseAddress;
+
     return func;
 }
 
@@ -2916,7 +2921,7 @@ void WINAPI RtlUnwindEx( PVOID end_frame, PVOID target_ip, EXCEPTION_RECORD *rec
     CONTEXT new_context;
     LDR_MODULE *module;
     NTSTATUS status;
-    DWORD i, size;
+    DWORD i;
 
     RtlCaptureContext( context );
     new_context = *context;
@@ -2962,31 +2967,18 @@ void WINAPI RtlUnwindEx( PVOID end_frame, PVOID target_ip, EXCEPTION_RECORD *rec
 
         /* first look for PE exception information */
 
-        if (!LdrFindEntryForAddress( (void *)context->Rip, &module ))
+        if ((dispatch.FunctionEntry = lookup_function_info( context->Rip, &dispatch.ImageBase, &module )))
         {
-            RUNTIME_FUNCTION *dir;
-
-            dispatch.ImageBase = (ULONG64)module->BaseAddress;
-            if ((dir = RtlImageDirectoryEntryToData( module->BaseAddress, TRUE,
-                                                     IMAGE_DIRECTORY_ENTRY_EXCEPTION, &size )))
-            {
-                if ((dispatch.FunctionEntry = find_function_info( context->Rip, module->BaseAddress,
-                                                                  dir, size )))
-                {
-                    dispatch.LanguageHandler = RtlVirtualUnwind( UNW_FLAG_UHANDLER, dispatch.ImageBase,
-                                                                 context->Rip, dispatch.FunctionEntry,
-                                                                 &new_context, &dispatch.HandlerData,
-                                                                 &dispatch.EstablisherFrame, NULL );
-                    goto unwind_done;
-                }
-            }
-            else if (!(module->Flags & LDR_WINE_INTERNAL))
-                WARN( "exception data not found in %s\n", debugstr_w(module->BaseDllName.Buffer) );
+            dispatch.LanguageHandler = RtlVirtualUnwind( UNW_FLAG_UHANDLER, dispatch.ImageBase,
+                                                         context->Rip, dispatch.FunctionEntry,
+                                                         &new_context, &dispatch.HandlerData,
+                                                         &dispatch.EstablisherFrame, NULL );
+            goto unwind_done;
         }
 
         /* then look for host system exception information */
 
-        if (!module || (module->Flags & LDR_WINE_INTERNAL))
+        else if (!module || (module->Flags & LDR_WINE_INTERNAL))
         {
             struct dwarf_eh_bases bases;
             const struct dwarf_fde *fde = _Unwind_Find_FDE( (void *)(context->Rip - 1), &bases );
@@ -3006,6 +2998,8 @@ void WINAPI RtlUnwindEx( PVOID end_frame, PVOID target_ip, EXCEPTION_RECORD *rec
             }
         }
 
+        else WARN( "exception data not found in %s\n", debugstr_w(module->BaseDllName.Buffer) );
+
         /* no exception information, treat as a leaf function */
 
         new_context.Rip = *(ULONG64 *)context->Rsp;
-- 
1.7.9.5

