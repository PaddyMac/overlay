# Distributed under the terms of the GNU General Public License v2

EAPI=4

inherit eutils cmake-utils

# version release, check http://code.google.com/p/bullet/downloads/list
MYP=${P}-rev2613

DESCRIPTION="Continuous Collision Detection and Physics Library"
HOMEPAGE="http://www.bulletphysics.com/"
SRC_URI="http://bullet.googlecode.com/files/${MYP}.tgz"

LICENSE="ZLIB"
SLOT="0"
KEYWORDS="amd64 ~ppc64 x86 ~amd64-linux ~x86-linux"
IUSE="custom_vector_math demos doc double-precision extras +glut +graphical_benchmark \
	internal_update_serialization_structures test threads"
REQUIRED_USE="demos? ( extras )"

RDEPEND="virtual/opengl
	glut? ( media-libs/freeglut )
	test? ( virtual/opencl )
	threads? ( virtual/opencl )"
DEPEND="${RDEPEND}
	virtual/pkgconfig
	doc? ( app-doc/doxygen[dot] )"

PATCHES=( "${FILESDIR}"/${PN}-2.78-soversion.patch )

S="${WORKDIR}/${MYP}"

src_prepare() {
	# allow to generate docs
	sed -i -e 's/GENERATE_HTMLHELP.*//g' Doxyfile || die
}

src_configure() {
	local mycmakeargs=(
		-DBUILD_SHARED_LIBS=ON
		$(cmake-utils_use_use   custom_vector_math  CUSTOM_VECTOR_MATH)
		$(cmake-utils_use_build demos               DEMOS)
		$(cmake-utils_use_build demos               CPU_DEMOS)
		$(cmake-utils_use_use   double-precision    DOUBLE_PRECISION)
		$(cmake-utils_use       extras              INSTALL_EXTRA_LIBS)
		$(cmake-utils_use_build extras              EXTRAS)
		$(cmake-utils_use_use   glut                GLUT)
		$(cmake-utils_use_use   graphical_benchmark GRAPHICAL_BENCHMARK)
		$(cmake-utils_use       internal_update_serialization_structures INTERNAL_UPDATE_SERIALIZATION_STRUCTURES)
		$(cmake-utils_use_build test                UNIT_TESTS)
		$(cmake-utils_use_build threads             MULTITHREADING)
	)
	cmake-utils_src_configure
}

src_compile() {
	cmake-utils_src_compile
	if use doc; then
		doxygen || die
	fi
}

src_install() {
	cmake-utils_src_install

	# 'make install' doesn't install GLUI, so we have to do it mnually
	if use glut; then
		dolib ${BUILD_DIR}/Extras/glui/libGLUI.so
		insinto ${EPREFIX}/usr/lib/GL
		doins Extras/glui/GL/glui.h
	fi

	# Install standard documentation
	dodoc AUTHORS ChangeLog NEWS README RELEASING.TXT

	# Install user documentation
	insinto "/usr/share/doc/${PF}/latex"
	doins docs/*.tex docs/*.sty
	insinto "/usr/share/doc/${PF}/pdf"
	doins *.pdf docs/*.pdf
	insinto "/usr/share/doc/${PF}/postscript"
	doins docs/*.eps

	# Install HTML API documentation generated by Doxygen
	use doc && dohtml -r html/*

	# Install demo programs
	if use demos; then
		# Standard demos first
		dobin ${BUILD_DIR}/Demos/Benchmarks/AppBenchmarks
		dobin ${BUILD_DIR}/Demos/HelloWorld/AppHelloWorld
		# Now the "CPU demos"
		dobin ${BUILD_DIR}/Demos/AllBulletDemos/AppAllBulletDemos
		dobin ${BUILD_DIR}/Demos/BasicDemo/AppBasicDemo
		dobin ${BUILD_DIR}/Demos/Box2dDemo/AppBox2dDemo
		#Note/Todo: AppBspPhysicsDemo may need BspDemo.bsp in the current directory to be fully functional
		dobin ${BUILD_DIR}/Demos/BspDemo/AppBspPhysicsDemo
		dobin ${BUILD_DIR}/Demos/BulletXmlImportDemo/AppBulletXmlImportDemo
		dobin ${BUILD_DIR}/Demos/CcdPhysicsDemo/AppCcdPhysicsDemo
		#Note/Todo: AppCharacterDemo needs BspDemo.bsp to be in the current directory to be fully functional
		dobin ${BUILD_DIR}/Demos/CharacterDemo/AppCharacterDemo
		dobin ${BUILD_DIR}/Demos/CollisionDemo/AppCollisionDemo
		dobin ${BUILD_DIR}/Demos/CollisionInterfaceDemo/AppCollisionInterfaceDemo
		dobin ${BUILD_DIR}/Demos/ConcaveConvexcastDemo/AppConcaveConvexCastDemo
		dobin ${BUILD_DIR}/Demos/ConcaveDemo/AppConcaveDemo
		dobin ${BUILD_DIR}/Demos/ConcaveRaycastDemo/AppConcaveRayCastDemo
		dobin ${BUILD_DIR}/Demos/ConstraintDemo/AppConstraintDemo
		dobin ${BUILD_DIR}/Demos/ContinuousConvexCollision/AppContinuousConvexCollisionDemo
		#Note/Todo: AppConvexDecompositionDemo needs file.obj and possibly testFile.bullet in the current directory to be fully functional
		dobin ${BUILD_DIR}/Demos/ConvexDecompositionDemo/AppConvexDecompositionDemo
		dobin ${BUILD_DIR}/Demos/ConvexHullDistance/AppConvexHullDistanceDemo
		dobin ${BUILD_DIR}/Demos/DoublePrecisionDemo/AppDoublePrecisionDemo
		dobin ${BUILD_DIR}/Demos/DynamicControlDemo/AppMotorDemo
		dobin ${BUILD_DIR}/Demos/ForkLiftDemo/AppForkLiftDemo
		dobin ${BUILD_DIR}/Demos/FractureDemo/AppFractureDemo
		dobin ${BUILD_DIR}/Demos/GenericJointDemo/AppGenericJointDemo
		dobin ${BUILD_DIR}/Demos/GjkConvexCastDemo/AppLinearConvexCastDemo
		dobin ${BUILD_DIR}/Demos/GyroscopicDemo/AppGyroscopicDemo
		dobin ${BUILD_DIR}/Demos/InternalEdgeDemo/AppInternalEdgeDemo
		dobin ${BUILD_DIR}/Demos/MovingConcaveDemo/AppMovingConcaveDemo
		dobin ${BUILD_DIR}/Demos/MultiMaterialDemo/AppMultiMaterialDemo
		dobin ${BUILD_DIR}/Demos/RagdollDemo/AppRagdollDemo
		dobin ${BUILD_DIR}/Demos/RaytestDemo/AppRaytestDemo
		dobin ${BUILD_DIR}/Demos/Raytracer/AppRaytracer
		dobin ${BUILD_DIR}/Demos/RollingFrictionDemo/AppRollingFrictionDemo
		dobin ${BUILD_DIR}/Demos/SerializeDemo/AppSerializeDemo
		dobin ${BUILD_DIR}/Demos/SimplexDemo/AppSimplexDemo
		dobin ${BUILD_DIR}/Demos/SliderConstraintDemo/AppSliderConstraintDemo
		dobin ${BUILD_DIR}/Demos/SoftDemo/AppSoftBodyDemo
		dobin ${BUILD_DIR}/Demos/UserCollisionAlgorithm/AppUserCollisionAlgorithm
		dobin ${BUILD_DIR}/Demos/VehicleDemo/AppVehicleDemo
		dobin ${BUILD_DIR}/Demos/VoronoiFractureDemo/AppVoronoiFractureDemo
	fi

	# Install source code for demo programs and extra libraries
	if use examples; then
		insinto "/usr/local/src/${PF}"
		doins -r Demos Extras
	fi
}

pkg_postinst() {
	if use demos && use !glut; then
		einfo
		einfo "You have built the demos without building the OpenGL plugin."
		einfo "The program \"AppAllBulletDemos\" will not work, but all of "
		einfo "the demo programs should still run.                         "
		einfo
	fi
}
